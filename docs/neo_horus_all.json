[
  {
    "id": "neo-horus-integrator",
    "priority": 40,
    "enabled": true,
    "css": "",
    "js": "(function(){\n  if (window.__NEO_HORUS_INTEGRATOR__) return; window.__NEO_HORUS_INTEGRATOR__=true;\n  const APP_KEY='dualapp:local:url';\n  function addFloatingBtn(){\n    if (document.getElementById('neo-horus-add')) return;\n    const b=document.createElement('button');\n    b.id='neo-horus-add';\n    b.textContent='âŠ• DualApp';\n    Object.assign(b.style,{position:'fixed',right:'14px',bottom:'88px',zIndex:'99999',\n      padding:'8px 12px',borderRadius:'12px',border:'1px solid rgba(255,255,255,.18)',\n      background:'linear-gradient(180deg,#14162a,#0f1324)',color:'#cfe9ff',fontWeight:'800',\n      boxShadow:'0 8px 24px rgba(0,0,0,.35)',cursor:'pointer'});\n    const file=document.createElement('input'); file.type='file'; file.accept='.html,.htm'; file.style.display='none';\n    b.onclick=()=>file.click();\n    file.onchange=async (e)=>{\n      const f=e.target.files && e.target.files[0]; if(!f) return;\n      const txt=await f.text();\n      const blob=new Blob([txt],{type:'text/html;charset=utf-8'});\n      const url=URL.createObjectURL(blob);\n      try{ localStorage.setItem(APP_KEY,url); alert('Dual App carregado localmente. VÃ¡ em APPS â€º abrir Dual App'); }catch{}\n    };\n    document.body.appendChild(b); document.body.appendChild(file);\n  }\n  function injectAppCard(){\n    const q = sel => document.querySelector(sel);\n    const appsView = q('#view-apps .page'); if(!appsView) return;\n    if (document.getElementById('neo-horus-card')) return;\n    const holder = document.createElement('div');\n    holder.className='grid';\n    holder.id='neo-horus-card';\n    holder.innerHTML = `\n      <div class=\"section\">KODUX â€¢ NEO HORUS</div>\n      <div class=\"grid\">\n        <div class=\"card\" id=\"neo-horus-open\" style=\"cursor:pointer\">\n          <div class=\"icon\">ðŸœ‚</div>\n          <div style=\"flex:1\">\n            <div class=\"title\">Dual App (microâ€‘frontend)</div>\n            <div class=\"muted\">Abrir instÃ¢ncia do dual app dentro do MonÃ³lito</div>\n            <div class=\"row\">\n              <button class=\"btn\" id=\"neo-horus-open-btn\">Abrir</button>\n              <button class=\"btn\" id=\"neo-horus-clear\">Limpar local</button>\n            </div>\n          </div>\n        </div>\n      </div>`;\n    appsView.appendChild(holder);\n    const btnOpen = document.getElementById('neo-horus-open-btn');\n    const btnClear= document.getElementById('neo-horus-clear');\n    btnOpen.onclick = ()=>{\n      const local = localStorage.getItem(APP_KEY) || '';\n      const fallback = '/dual-app/index.html';\n      const url = local || fallback;\n      try {\n        if (typeof window.openApp === 'function'){\n          window.openApp({ key:'dualapp', title:'Dual App', url, icon:'' });\n        } else {\n          const v=document.createElement('div'); v.style.cssText='position:fixed;inset:0;z-index:99998;background:#000';\n          v.innerHTML=`<iframe src=\"${url}\" style=\"position:absolute;inset:0;border:0;width:100%;height:100%\" allow=\"autoplay;clipboard-read;clipboard-write\"></iframe>\n          <button id=\"neo-horus-close\" style=\"position:fixed;right:16px;top:16px;z-index:99999;border:1px solid #fff3;border-radius:10px;padding:8px 12px;background:#0f1324;color:#e9ecff;font-weight:800;cursor:pointer\">Fechar</button>`;\n          document.body.appendChild(v);\n          v.querySelector('#neo-horus-close').onclick=()=>v.remove();\n        }\n      } catch(e){ alert('NÃ£o consegui abrir o Dual App. Hospede o HTML ou carregue um .html local pelo botÃ£o âŠ• DualApp.'); }\n    };\n    btnClear.onclick = ()=>{ localStorage.removeItem(APP_KEY); alert('URL local do Dual App apagada.'); };\n  }\n  addFloatingBtn();\n  document.querySelectorAll('[data-nav]').forEach(btn=>{\n    btn.addEventListener('click',()=>{\n      if(btn.dataset.nav==='apps') setTimeout(injectAppCard,150);\n    });\n  });\n  if (location.hash.includes('apps')) setTimeout(injectAppCard, 300);\n})();"
  },
  {
    "id": "neo-horus-store-sync",
    "priority": 41,
    "enabled": true,
    "css": "",
    "js": "(function(){\n  if (window.__NEO_HORUS_STORE_SYNC__) return; window.__NEO_HORUS_STORE_SYNC__=true;\n  const KEY='dualapp.settings';\n  function read(){ try{return JSON.parse(localStorage.getItem(KEY)||'{}')}catch(_){return{}}; }\n  function write(v){ try{localStorage.setItem(KEY, JSON.stringify(v||{}));}catch(_){ } }\n  function broadcast(v){ try{ window.postMessage({type:'DUALSTORE_SYNC', payload:v}, '*'); }catch(_){ } }\n  window.addEventListener('storage', (e)=>{\n    if(e.key===KEY){ try{ const v=JSON.parse(e.newValue||'{}'); broadcast(v); }catch(_){ } }\n  });\n  window.addEventListener('message', (ev)=>{\n    const d = ev.data||{};\n    if(d.type==='DUALSTORE_SYNC_FROM_IFRAME'){\n      write(d.payload||{});\n    }\n  });\n  window.NeoHorusSync = {\n    pushCurrent(){ broadcast(read()); },\n    set(partial){\n      const base = read();\n      const merged = Object.assign({}, base, partial||{});\n      write(merged); broadcast(merged);\n    }\n  };\n  setTimeout(()=>{ try{ broadcast(read()); }catch(_){ } }, 500);\n})();"
  },
  {
    "id": "neo-horus-chat-bridge",
    "priority": 42,
    "enabled": true,
    "css": "",
    "js": "(function(){\n  if (window.__NEO_HORUS_CHAT_BRIDGE__) return; window.__NEO_HORUS_CHAT_BRIDGE__=true;\n  function getDualAppFrame(){\n    const v = document.querySelector('.viewer iframe'); if (v) return v.contentWindow;\n    const frames = document.querySelectorAll('iframe'); for(const f of frames){ try{ if(f && f.src && /dual/i.test(f.src)) return f.contentWindow; }catch(_){} }\n    return null;\n  }\n  function pushToDualApp(text){\n    const w = getDualAppFrame(); if(!w) return false;\n    try{ w.postMessage({ type:'DUALCHAT_PUSH', text: String(text||'') }, '*'); return true; }catch(_){ return false; }\n  }\n  window.addEventListener('message', (ev)=>{\n    const d = ev.data||{};\n    if(d.type==='DUALCHAT_PUSH_TO_MONOLITH' && typeof window.chatBubble==='function'){\n      window.chatBubble(String(d.text||''),'ai',{});\n    }\n  });\n  (function hookChat(){\n    if (typeof window.chatBubble!=='function' || window.chatBubble.__horus) return;\n    const prev = window.chatBubble;\n    window.chatBubble = function(text, who, meta){\n      const out = prev.call(this, text, who, meta);\n      if((who||'ai')==='ai'){ pushToDualApp(text); }\n      return out;\n    };\n    window.chatBubble.__horus = true;\n  })();\n  setTimeout(()=>{ try{ const w=getDualAppFrame(); w && w.postMessage({type:'DUALCHAT_ANNOUNCE'}, '*'); }catch(_){ } }, 1200);\n})();"
  }
]
